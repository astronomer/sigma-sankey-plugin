{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Label } from \"../../core/render/Label\";\nimport { Series } from \"../../core/render/Series\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNode } from \"./FlowNode\";\nimport * as $array from \"../../core/util/Array\";\n/**\r\n * Holds instances of nodes for a [[Flow]] series.\r\n */\n\nvar FlowNodes =\n/** @class */\nfunction (_super) {\n  __extends(FlowNodes, _super);\n\n  function FlowNodes() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * List of label elements.\r\n     *\r\n     * @default new ListTemplate<Label>\r\n     */\n\n\n    Object.defineProperty(_this, \"labels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Label._new(_this._root, {}, [_this.labels.template]);\n      })\n    });\n    /**\r\n     * List of node elements.\r\n     *\r\n     * @default new ListTemplate<FlowNode>\r\n     */\n\n    Object.defineProperty(_this, \"nodes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return FlowNode._new(_this._root, {\n          themeTags: [\"node\"]\n        }, [_this.nodes.template]);\n      })\n    });\n    Object.defineProperty(_this, \"_userDataSet\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    return _this;\n  }\n\n  Object.defineProperty(FlowNodes.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.fields.push(\"unknown\", \"name\", \"fill\");\n      this.set(\"idField\", \"id\");\n      this.set(\"nameField\", \"id\");\n      this.set(\"fillField\", \"fill\");\n      this.set(\"unknownField\", \"unknown\");\n      this.children.push(this.bulletsContainer);\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  Object.defineProperty(FlowNodes.prototype, \"_onDataClear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var colors = this.get(\"colors\");\n\n      if (colors) {\n        colors.reset();\n      }\n\n      this._userDataSet = true;\n    }\n  });\n  Object.defineProperty(FlowNodes.prototype, \"processDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.processDataItem.call(this, dataItem);\n\n      dataItem.setRaw(\"d3SankeyNode\", {\n        name: dataItem.get(\"id\"),\n        dataItem: dataItem\n      });\n\n      if (dataItem.get(\"fill\") == null) {\n        var colors = this.get(\"colors\");\n\n        if (colors) {\n          dataItem.setRaw(\"fill\", colors.next());\n        }\n      }\n\n      dataItem.setRaw(\"node\", this.makeNode(dataItem));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(FlowNodes.prototype, \"makeNode\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTag) {\n      var node = this.nodes.make();\n      this.nodes.push(node);\n\n      if (themeTag) {\n        node.addTag(themeTag);\n      }\n\n      if (dataItem.get(\"unknown\")) {\n        node.addTag(\"unknown\");\n      }\n\n      this.children.push(node);\n\n      node._setDataItem(dataItem);\n\n      node.series = this;\n      dataItem.set(\"node\", node);\n      return node;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(FlowNodes.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.disposeDataItem.call(this, dataItem);\n\n      var node = dataItem.get(\"node\");\n\n      if (node) {\n        this.nodes.removeValue(node);\n        node.dispose();\n      }\n\n      var label = dataItem.get(\"label\");\n\n      if (label) {\n        this.labels.removeValue(label);\n        label.dispose();\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(FlowNodes.prototype, \"addincomingLink\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, link) {\n      var incoming = dataItem.get(\"incomingLinks\");\n\n      if (!incoming) {\n        incoming = [];\n        dataItem.set(\"incomingLinks\", incoming);\n      }\n\n      incoming.push(link);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(FlowNodes.prototype, \"addOutgoingLink\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, link) {\n      var outgoing = dataItem.get(\"outgoingLinks\");\n\n      if (!outgoing) {\n        outgoing = [];\n        dataItem.set(\"outgoingLinks\", outgoing);\n      }\n\n      outgoing.push(link);\n    }\n  });\n  /**\r\n   * Shows node's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(FlowNodes.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, flow, label, links;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n              flow = this.flow;\n\n              if (flow) {\n                label = dataItem.get(\"label\");\n\n                if (label) {\n                  label.show(duration);\n                }\n\n                links = dataItem.get(\"outgoingLinks\");\n\n                if (links) {\n                  $array.each(links, function (link) {\n                    flow.showDataItem(link, duration);\n                  });\n                }\n\n                links = dataItem.get(\"incomingLinks\");\n\n                if (links) {\n                  $array.each(links, function (link) {\n                    flow.showDataItem(link, duration);\n                  });\n                }\n              }\n\n              return [4\n              /*yield*/\n              , promises];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(FlowNodes.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, flow, label, links;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              flow = this.flow;\n\n              if (flow) {\n                label = dataItem.get(\"label\");\n\n                if (label) {\n                  label.hide(duration);\n                }\n\n                links = dataItem.get(\"outgoingLinks\");\n\n                if (links) {\n                  $array.each(links, function (link) {\n                    flow.hideDataItem(link, duration);\n                  });\n                }\n\n                links = dataItem.get(\"incomingLinks\");\n\n                if (links) {\n                  $array.each(links, function (link) {\n                    flow.hideDataItem(link, duration);\n                  });\n                }\n              }\n\n              return [4\n              /*yield*/\n              , promises];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(FlowNodes, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"FlowNodes\"\n  });\n  Object.defineProperty(FlowNodes, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Series.classNames.concat([FlowNodes.className])\n  });\n  return FlowNodes;\n}(Series);\n\nexport { FlowNodes };","map":{"version":3,"sources":["../../../../../src/.internal/charts/flow/FlowNodes.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { Flow, IFlowDataItem } from \"./Flow\";\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { Label } from \"../../core/render/Label\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNode } from \"./FlowNode\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface IFlowNodesDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Node name.\n\t */\n\tname: string;\n\n\t/**\n\t * An associated node instance.\n\t */\n\tnode: FlowNode;\n\n\t/**\n\t * Node label.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Indicates \"unknown\" node.\n\t */\n\tunknown: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyNode: d3sankey.SankeyNode<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * Sum of values of all incoming links.\n\t */\n\tsumIncoming: number;\n\n\t/**\n\t * Sum of values of all outgoing links.\n\t */\n\tsumOutgoing: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumIncomingWorking: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumOutgoingWorking: number;\n\n\t/**\n\t * Sum of values of all links: incoming and outgoing.\n\t */\n\tsum: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumWorking: number;\n\n\t/**\n\t * A list of incoming link data items.\n\t */\n\tincomingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * A list of outgoing link data items.\n\t */\n\toutgoingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * Depth of the node.\n\t */\n\tdepth: number;\n\n}\n\nexport interface IFlowNodesSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data boolean setting if the node is \"unknown\".\n\t *\n\t * @default \"unknown\"\n\t */\n\tunknownField?: string;\n\n\t/**\n\t * A field in data that holds name for the node.\n\t *\n\t * @default \"id\"\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills nodes.\n\t *\n\t * @default \"fill\"\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] that series will use to apply to its nodes.\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Animation duration in ms.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function to use for node animations.\n\t */\n\tanimationEasing?: (t: Time) => Time;\n}\n\nexport interface IFlowNodesPrivate extends ISeriesPrivate {\n}\n\nexport interface IFlowNodesEvents extends ISeriesEvents {\n}\n\n\n/**\n * Holds instances of nodes for a [[Flow]] series.\n */\nexport abstract class FlowNodes extends Series {\n\tpublic static className: string = \"FlowNodes\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([FlowNodes.className]);\n\n\tdeclare public _settings: IFlowNodesSettings;\n\tdeclare public _privateSettings: IFlowNodesPrivate;\n\tdeclare public _dataItemSettings: IFlowNodesDataItem;\n\tdeclare public _events: IFlowNodesEvents;\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {}, [this.labels.template])\n\t);\n\n\t/**\n\t * List of node elements.\n\t *\n\t * @default new ListTemplate<FlowNode>\n\t */\n\tpublic readonly nodes: ListTemplate<FlowNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => FlowNode._new(this._root, { themeTags: [\"node\"] }, [this.nodes.template])\n\t);\n\n\t/**\n\t * Related [[Flow]] series.\n\t */\n\tpublic abstract flow: Flow | undefined;\n\n\tpublic _userDataSet = false;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"unknown\", \"name\", \"fill\");\n\n\t\tthis.set(\"idField\", \"id\");\n\t\tthis.set(\"nameField\", \"id\");\n\t\tthis.set(\"fillField\", \"fill\");\n\t\tthis.set(\"unknownField\", \"unknown\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _onDataClear() {\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\n\t\tthis._userDataSet = true;\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tdataItem.setRaw(\"d3SankeyNode\", { name: dataItem.get(\"id\"), dataItem: dataItem });\n\n\t\tif (dataItem.get(\"fill\") == null) {\n\t\t\tlet colors = this.get(\"colors\");\n\t\t\tif (colors) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"node\", this.makeNode(dataItem));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTag?: string): FlowNode {\n\n\t\tconst node = this.nodes.make();\n\t\tthis.nodes.push(node);\n\n\t\tif (themeTag) {\n\t\t\tnode.addTag(themeTag);\n\t\t}\n\n\t\tif (dataItem.get(\"unknown\")) {\n\t\t\tnode.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.children.push(node);\n\t\tnode._setDataItem(dataItem);\n\t\tnode.series = this;\n\n\t\tdataItem.set(\"node\", node);\n\t\treturn node;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addincomingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet incoming = dataItem.get(\"incomingLinks\");\n\t\tif (!incoming) {\n\t\t\tincoming = [];\n\t\t\tdataItem.set(\"incomingLinks\", incoming)\n\t\t}\n\t\tincoming.push(link);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addOutgoingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet outgoing = dataItem.get(\"outgoingLinks\");\n\t\tif (!outgoing) {\n\t\t\toutgoing = [];\n\t\t\tdataItem.set(\"outgoingLinks\", outgoing)\n\t\t}\n\t\toutgoing.push(link);\n\t}\n\n\t/**\n\t * Shows node's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst flow = this.flow;\n\t\tif (flow) {\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.show(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst flow = this.flow;\n\t\tif (flow) {\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.hide(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\n\t\t\tif (links) {\n\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tawait promises;\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}