{"ast":null,"code":"import { __extends, __read } from \"tslib\";\nimport { Flow } from \"./Flow\";\nimport { SankeyNodes } from \"./SankeyNodes\";\nimport { SankeyLink } from \"./SankeyLink\";\nimport { area, line } from \"d3-shape\";\nimport { curveMonotoneXTension } from \"../../core/render/MonotoneXTension\";\nimport { curveMonotoneYTension } from \"../../core/render/MonotoneYTension\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3sankey from \"d3-sankey\";\n/**\r\n * Sankey series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\r\n * @important\r\n */\n\nvar Sankey =\n/** @class */\nfunction (_super) {\n  __extends(Sankey, _super);\n\n  function Sankey() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * List of link elements.\r\n     *\r\n     * @default new ListTemplate<SankeyLink>\r\n     */\n\n\n    Object.defineProperty(_this, \"links\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return SankeyLink._new(_this._root, {\n          themeTags: [\"link\", \"shape\"]\n        }, [_this.links.template]);\n      })\n    });\n    /**\r\n     * A series representing sankey nodes.\r\n     *\r\n     * @default SankeyNodes.new()\r\n     */\n\n    Object.defineProperty(_this, \"nodes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(SankeyNodes.new(_this._root, {}))\n    });\n    Object.defineProperty(_this, \"_d3Sankey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: d3sankey.sankey()\n    });\n    Object.defineProperty(_this, \"_d3Graph\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_fillGenerator\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: area()\n    });\n    Object.defineProperty(_this, \"_strokeGenerator\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: line()\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Sankey.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"sankey\", this._settings.orientation || \"horizontal\"]);\n\n      this._fillGenerator.y0(function (p) {\n        return p[3];\n      });\n\n      this._fillGenerator.x0(function (p) {\n        return p[2];\n      });\n\n      this._fillGenerator.y1(function (p) {\n        return p[1];\n      });\n\n      this._fillGenerator.x1(function (p) {\n        return p[0];\n      });\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sankey.prototype, \"makeLink\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var source = dataItem.get(\"source\");\n      var target = dataItem.get(\"target\");\n      var link = this.links.make();\n\n      if (source.get(\"unknown\")) {\n        link.addTag(\"source\");\n        link.addTag(\"unknown\");\n      }\n\n      if (target.get(\"unknown\")) {\n        link.addTag(\"target\");\n        link.addTag(\"unknown\");\n      }\n\n      this.linksContainer.children.push(link);\n\n      link._setDataItem(dataItem);\n\n      link.set(\"source\", source);\n      link.set(\"target\", target);\n      link.series = this;\n      this.links.push(link);\n      return link;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sankey.prototype, \"updateSankey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      var d3Graph = this._d3Graph;\n\n      if (d3Graph) {\n        this._d3Sankey.update(d3Graph);\n\n        $array.each(this.dataItems, function (dataItem) {\n          var link = dataItem.get(\"link\");\n          link.setPrivate(\"orientation\", _this.get(\"orientation\"));\n          link.markDirty();\n        });\n      }\n    }\n  });\n  Object.defineProperty(Sankey.prototype, \"_updateLinkColor\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype._updateLinkColor.call(this, dataItem);\n\n      var orientation = this.get(\"orientation\");\n\n      var fillGradient = dataItem.get(\"link\")._fillGradient;\n\n      var strokeGradient = dataItem.get(\"link\")._strokeGradient;\n\n      if (orientation == \"vertical\") {\n        if (fillGradient) {\n          fillGradient.set(\"rotation\", 90);\n        }\n\n        if (strokeGradient) {\n          strokeGradient.set(\"rotation\", 90);\n        }\n      } else {\n        if (fillGradient) {\n          fillGradient.set(\"rotation\", 0);\n        }\n\n        if (strokeGradient) {\n          strokeGradient.set(\"rotation\", 0);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sankey.prototype, \"_getBulletLocation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet) {\n      if (this.get(\"orientation\") == \"vertical\") {\n        return bullet.get(\"locationY\", 0);\n      } else {\n        return bullet.get(\"locationX\", 0);\n      }\n    }\n  });\n  Object.defineProperty(Sankey.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a;\n\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      var vertical = false;\n\n      if (this.get(\"orientation\") == \"vertical\") {\n        vertical = true;\n      }\n\n      if (this.isDirty(\"orientation\") || this.isDirty(\"linkTension\")) {\n        var linkTension = this.get(\"linkTension\", 0.5);\n\n        if (vertical) {\n          this._fillGenerator.curve(curveMonotoneYTension(linkTension));\n\n          this._strokeGenerator.curve(curveMonotoneYTension(linkTension));\n        } else {\n          this._fillGenerator.curve(curveMonotoneXTension(linkTension));\n\n          this._strokeGenerator.curve(curveMonotoneXTension(linkTension));\n        }\n      }\n\n      if (this._valuesDirty || this._sizeDirty || this.isDirty(\"nodePadding\") || this.isDirty(\"nodeWidth\") || this.isDirty(\"nodeAlign\") || this.isDirty(\"nodeSort\") || this.isDirty(\"orientation\") || this.isDirty(\"linkTension\")) {\n        if (this._nodesData.length > 0) {\n          var d3Sankey = this._d3Sankey;\n          var w = this.innerWidth();\n          var h = this.innerHeight();\n\n          if (vertical) {\n            _a = __read([h, w], 2), w = _a[0], h = _a[1];\n          }\n\n          d3Sankey.size([w, h]);\n          d3Sankey.nodePadding(this.get(\"nodePadding\", 10));\n          d3Sankey.nodeWidth(this.get(\"nodeWidth\", 10));\n          d3Sankey.nodeSort(this.get(\"nodeSort\", null));\n\n          switch (this.get(\"nodeAlign\")) {\n            case \"right\":\n              d3Sankey.nodeAlign(d3sankey.sankeyRight);\n              break;\n\n            case \"justify\":\n              d3Sankey.nodeAlign(d3sankey.sankeyJustify);\n              break;\n\n            case \"center\":\n              d3Sankey.nodeAlign(d3sankey.sankeyCenter);\n              break;\n\n            default:\n              d3Sankey.nodeAlign(d3sankey.sankeyLeft);\n              break;\n          }\n\n          this._d3Graph = d3Sankey({\n            nodes: this._nodesData,\n            links: this._linksData\n          });\n          $array.each(this.dataItems, function (dataItem) {\n            var link = dataItem.get(\"link\");\n            link.setPrivate(\"orientation\", _this.get(\"orientation\"));\n            link.markDirty();\n          });\n          var d3Graph = this._d3Graph;\n\n          if (d3Graph) {\n            var nodes = d3Graph.nodes;\n            $array.each(nodes, function (d3SankeyNode) {\n              var dataItem = d3SankeyNode.dataItem;\n              var node = dataItem.get(\"node\");\n              var x0;\n              var x1;\n              var y0;\n              var y1;\n\n              if (vertical) {\n                x0 = d3SankeyNode.y0;\n                x1 = d3SankeyNode.y1;\n                y0 = d3SankeyNode.x0;\n                y1 = d3SankeyNode.x1;\n              } else {\n                x0 = d3SankeyNode.x0;\n                x1 = d3SankeyNode.x1;\n                y0 = d3SankeyNode.y0;\n                y1 = d3SankeyNode.y1;\n              }\n\n              if ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1)) {\n                node.setAll({\n                  x: x0,\n                  y: y0,\n                  width: x1 - x0,\n                  height: y1 - y0\n                });\n                var rectangle = dataItem.get(\"rectangle\");\n                rectangle.setAll({\n                  width: x1 - x0,\n                  height: y1 - y0\n                });\n              }\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sankey, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Sankey\"\n  });\n  Object.defineProperty(Sankey, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Flow.classNames.concat([Sankey.className])\n  });\n  return Sankey;\n}(Flow);\n\nexport { Sankey };","map":{"version":3,"sources":["../../../../../src/.internal/charts/flow/Sankey.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { SankeyNodes, ISankeyNodesDataItem } from \"./SankeyNodes\";\nimport { SankeyLink } from \"./SankeyLink\";\nimport { area, line } from \"d3-shape\";\nimport { curveMonotoneXTension } from \"../../core/render/MonotoneXTension\";\nimport { curveMonotoneYTension } from \"../../core/render/MonotoneYTension\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3sankey from \"d3-sankey\";\n\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nexport interface ISankeyDataItem extends IFlowDataItem {\n\n\t/**\n\t * Link element.\n\t */\n\tlink: SankeyLink;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<ISankeyNodesDataItem>;\n\n}\n\nexport interface ISankeySettings extends IFlowSettings {\n\n\t/**\n\t * Orientation of the series.\n\t *\n\t * @default \"horizontal\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * Alignment of nodes.\n\t *\n\t * @default \"left\"\n\t */\n\tnodeAlign?: \"left\" | \"right\" | \"justify\" | \"center\"\n\n\t/**\n\t * Tension setting of the link curve.\n\t *\n\t * Accepts values from `0` to `1`.\n\t *\n\t * `1` will result in perfectly straight lines.\n\t *\n\t * @default 0.5\n\t */\n\tlinkTension?: number;\n\n\t/**\n\t * A custom function to use when sorting nodes.\n\t *\n\t * @todo test\n\t * @ignore\n\t */\n\tnodeSort?: (a: d3sankey.SankeyNodeMinimal<{}, {}>, b: d3sankey.SankeyNodeMinimal<{}, {}>) => number | null;\n\n}\n\nexport interface ISankeyPrivate extends IFlowPrivate {\n}\n\nexport interface ISankeyEvents extends IFlowEvents {\n}\n\n/**\n * Sankey series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Sankey extends Flow {\n\n\tpublic static className: string = \"Sankey\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Sankey.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<SankeyLink>\n\t */\n\tpublic readonly links: ListTemplate<SankeyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => SankeyLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"sankey\", this._settings.orientation || \"horizontal\"]);\n\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A series representing sankey nodes.\n\t *\n\t * @default SankeyNodes.new()\n\t */\n\tpublic readonly nodes: SankeyNodes = this.children.push(SankeyNodes.new(this._root, {}));\n\n\tdeclare public _settings: ISankeySettings;\n\tdeclare public _privateSettings: ISankeyPrivate;\n\tdeclare public _dataItemSettings: ISankeyDataItem;\n\tdeclare public _events: ISankeyEvents;\n\n\tpublic _d3Sankey = d3sankey.sankey();\n\tpublic _d3Graph: d3sankey.SankeyGraph<{}, {}> | undefined;\n\n\tpublic _fillGenerator = area();\n\tpublic _strokeGenerator = line();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): SankeyLink {\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\n\t\tconst link = this.links.make();\n\n\t\tif (source.get(\"unknown\")) {\n\t\t\tlink.addTag(\"source\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tif (target.get(\"unknown\")) {\n\t\t\tlink.addTag(\"target\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.linksContainer.children.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", source);\n\t\tlink.set(\"target\", target);\n\t\tlink.series = this;\n\n\t\tthis.links.push(link);\n\n\t\treturn link;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateSankey() {\n\t\tconst d3Graph = this._d3Graph;\n\t\tif (d3Graph) {\n\t\t\tthis._d3Sankey.update(d3Graph);\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\tlink.markDirty();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateLinkColor(dataItem);\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst fillGradient = dataItem.get(\"link\")._fillGradient;\n\t\tconst strokeGradient = dataItem.get(\"link\")._strokeGradient;\n\n\t\tif (orientation == \"vertical\") {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\treturn bullet.get(\"locationY\", 0);\n\t\t}\n\t\telse {\n\t\t\treturn bullet.get(\"locationX\", 0);\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tlet vertical = false;\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\") || this.isDirty(\"linkTension\")) {\n\t\t\tconst linkTension = this.get(\"linkTension\", 0.5);\n\t\t\tif (vertical) {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"nodePadding\") || this.isDirty(\"nodeWidth\") || this.isDirty(\"nodeAlign\") || this.isDirty(\"nodeSort\") || this.isDirty(\"orientation\") || this.isDirty(\"linkTension\")) {\n\t\t\tif (this._nodesData.length > 0) {\n\t\t\t\tconst d3Sankey = this._d3Sankey;\n\t\t\t\tlet w = this.innerWidth();\n\t\t\t\tlet h = this.innerHeight();\n\n\t\t\t\tif (vertical) {\n\t\t\t\t\t[w, h] = [h, w];\n\t\t\t\t}\n\n\t\t\t\td3Sankey.size([w, h]);\n\t\t\t\td3Sankey.nodePadding(this.get(\"nodePadding\", 10));\n\t\t\t\td3Sankey.nodeWidth(this.get(\"nodeWidth\", 10));\n\t\t\t\td3Sankey.nodeSort(this.get(\"nodeSort\", null) as any);\n\n\t\t\t\tswitch (this.get(\"nodeAlign\")) {\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyRight);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"justify\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyJustify);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyCenter);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyLeft);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis._d3Graph = d3Sankey({ nodes: this._nodesData, links: this._linksData });\n\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\t\tlink.markDirty();\n\t\t\t\t})\n\n\t\t\t\tconst d3Graph = this._d3Graph;\n\n\t\t\t\tif (d3Graph) {\n\t\t\t\t\tconst nodes = d3Graph.nodes;\n\n\t\t\t\t\t$array.each(nodes, (d3SankeyNode) => {\n\t\t\t\t\t\tconst dataItem = (d3SankeyNode as any).dataItem as DataItem<ISankeyNodesDataItem>;\n\t\t\t\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\t\t\t\tlet x0: number | undefined;\n\t\t\t\t\t\tlet x1: number | undefined;\n\t\t\t\t\t\tlet y0: number | undefined;\n\t\t\t\t\t\tlet y1: number | undefined;\n\n\t\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.y1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.x1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.x1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.y1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1)) {\n\t\t\t\t\t\t\tnode.setAll({ x: x0, y: y0, width: x1 - x0, height: y1 - y0 });\n\n\t\t\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\t\t\trectangle.setAll({ width: x1 - x0, height: y1 - y0 });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}