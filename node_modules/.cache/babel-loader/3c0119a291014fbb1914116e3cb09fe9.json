{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { FlowDefaultTheme } from \"./FlowDefaultTheme\";\nimport { Series } from \"../../core/render/Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\n/**\r\n * A base class for all flow type series: [[Sankey]] and [[Chord]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more info\r\n */\n\nvar Flow =\n/** @class */\nfunction (_super) {\n  __extends(Flow, _super);\n\n  function Flow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Container series will place their links in.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n\n    Object.defineProperty(_this, \"linksContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    Object.defineProperty(_this, \"_nodesData\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_linksData\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_index\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_nodesDataSet\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_linksByIndex\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Flow.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._defaultThemes.push(FlowDefaultTheme.new(this._root));\n\n      this.fields.push(\"disabled\", \"sourceId\", \"targetId\");\n\n      if (this.nodes) {\n        this.nodes.flow = this;\n      }\n\n      _super.prototype._afterNew.call(this);\n\n      this.children.push(this.bulletsContainer);\n    }\n  });\n  Object.defineProperty(Flow.prototype, \"processDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.processDataItem.call(this, dataItem);\n\n      var nodes = this.nodes;\n\n      if (nodes) {\n        var unknown = false;\n        var sourceId = dataItem.get(\"sourceId\");\n        var sourceDataItem = nodes.getDataItemById(sourceId);\n\n        if (!sourceDataItem) {\n          if (sourceId == null) {\n            sourceId = \"undefined\" + this._index;\n            this._index++;\n            unknown = true;\n          }\n\n          nodes.data.push({\n            id: sourceId,\n            unknown: unknown\n          });\n          sourceDataItem = nodes.getDataItemById(sourceId);\n\n          if (!unknown) {\n            sourceDataItem.set(\"name\", sourceId);\n          }\n        }\n\n        unknown = false;\n        var targetId = dataItem.get(\"targetId\");\n        var targetDataItem = nodes.getDataItemById(targetId);\n\n        if (!targetDataItem) {\n          if (targetId == null) {\n            targetId = \"undefined\" + this._index;\n            this._index++;\n            unknown = true;\n          }\n\n          nodes.data.push({\n            id: targetId,\n            unknown: unknown\n          });\n          targetDataItem = nodes.getDataItemById(targetId);\n\n          if (!unknown) {\n            targetDataItem.set(\"name\", targetId);\n          }\n        }\n\n        if (sourceDataItem) {\n          dataItem.set(\"source\", sourceDataItem);\n          nodes.addOutgoingLink(sourceDataItem, dataItem);\n        }\n\n        if (targetDataItem) {\n          dataItem.set(\"target\", targetDataItem);\n          nodes.addincomingLink(targetDataItem, dataItem);\n        }\n\n        dataItem.set(\"link\", this.makeLink(dataItem));\n        var sourceIndex = this.nodes.dataItems.indexOf(sourceDataItem);\n        var targetIndex = this.nodes.dataItems.indexOf(targetDataItem);\n        this._linksByIndex[sourceIndex + \"_\" + targetIndex] = dataItem;\n\n        if (sourceDataItem.get(\"unknown\")) {\n          if (targetDataItem) {\n            sourceDataItem.set(\"fill\", targetDataItem.get(\"fill\"));\n          }\n\n          dataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n        }\n\n        if (targetDataItem.get(\"unknown\")) {\n          if (sourceDataItem) {\n            targetDataItem.set(\"fill\", sourceDataItem.get(\"fill\"));\n          }\n\n          dataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n        }\n\n        this._updateLinkColor(dataItem);\n      }\n    }\n  });\n  Object.defineProperty(Flow.prototype, \"_onDataClear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this.nodes._userDataSet) {\n        this.nodes.data.setAll([]);\n        this.nodes._userDataSet = false;\n      }\n    }\n  });\n  Object.defineProperty(Flow.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      var valueLow = Infinity;\n      var valueHigh = -Infinity;\n      var valueSum = 0;\n\n      if (this._valuesDirty) {\n        this._nodesData = [];\n        var nodes_1 = this.nodes;\n\n        if (nodes_1) {\n          $array.each(nodes_1.dataItems, function (dataItem) {\n            var d3SankeyNode = dataItem.get(\"d3SankeyNode\");\n\n            _this._nodesData.push(d3SankeyNode);\n\n            var incoming = dataItem.get(\"incomingLinks\");\n            var sumIncoming = 0;\n            var sumIncomingWorking = 0;\n\n            if (incoming) {\n              $array.each(incoming, function (link) {\n                var value = link.get(\"value\");\n                var workingValue = link.get(\"valueWorking\");\n                sumIncoming += value;\n                sumIncomingWorking += workingValue;\n              });\n            }\n\n            dataItem.set(\"sumIncoming\", sumIncoming);\n            dataItem.set(\"sumIncomingWorking\", sumIncomingWorking);\n            var outgoing = dataItem.get(\"outgoingLinks\");\n            var sumOutgoing = 0;\n            var sumOutgoingWorking = 0;\n\n            if (outgoing) {\n              $array.each(outgoing, function (link) {\n                var value = link.get(\"value\");\n                var workingValue = link.get(\"valueWorking\");\n                sumOutgoing += value;\n                sumOutgoingWorking += workingValue;\n              });\n            }\n\n            dataItem.set(\"sumOutgoing\", sumOutgoing);\n            dataItem.set(\"sumOutgoingWorking\", sumOutgoingWorking);\n            dataItem.set(\"sum\", sumIncoming + sumOutgoing);\n            dataItem.set(\"sumWorking\", sumIncomingWorking + sumOutgoingWorking);\n            nodes_1.updateLegendValue(dataItem);\n          });\n        }\n\n        this._linksData = [];\n        $array.each(this.dataItems, function (dataItem) {\n          var value = dataItem.get(\"value\");\n\n          if ($type.isNumber(value)) {\n            if (value < valueLow) {\n              valueLow = value;\n            }\n\n            if (value > valueHigh) {\n              valueHigh = value;\n            }\n\n            valueSum += value;\n          }\n        });\n        $array.each(this.dataItems, function (dataItem) {\n          var value = dataItem.get(\"value\");\n\n          if ($type.isNumber(value)) {\n            var valueWorking = dataItem.get(\"valueWorking\");\n\n            var minSize = _this.get(\"minSize\", 0);\n\n            if (minSize > 0) {\n              if (valueWorking < minSize * valueSum) {\n                valueWorking = minSize * valueSum;\n              }\n            }\n\n            var d3SankeyLink = {\n              source: dataItem.get(\"source\").get(\"d3SankeyNode\"),\n              target: dataItem.get(\"target\").get(\"d3SankeyNode\"),\n              value: valueWorking\n            };\n            dataItem.setRaw(\"d3SankeyLink\", d3SankeyLink);\n\n            _this._linksData.push(d3SankeyLink);\n\n            _this.updateLegendValue(dataItem);\n          }\n        });\n        this.setPrivateRaw(\"valueHigh\", valueHigh);\n        this.setPrivateRaw(\"valueLow\", valueLow);\n        this.setPrivateRaw(\"valueSum\", valueSum);\n      }\n    }\n  });\n  Object.defineProperty(Flow.prototype, \"_updateLinkColor\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var link = dataItem.get(\"link\");\n      var fillStyle = link.get(\"fillStyle\");\n      var strokeStyle = link.get(\"strokeStyle\");\n      var source = dataItem.get(\"source\");\n      var target = dataItem.get(\"target\");\n      var sourceFill = source.get(\"fill\");\n      var targetFill = target.get(\"fill\");\n      link.remove(\"fillGradient\");\n      link.remove(\"strokeGradient\");\n\n      switch (fillStyle) {\n        case \"solid\":\n          link._applyTemplates();\n\n          break;\n\n        case \"source\":\n          link.set(\"fill\", sourceFill);\n          break;\n\n        case \"target\":\n          link.set(\"fill\", targetFill);\n          break;\n\n        case \"gradient\":\n          var gradient = link._fillGradient;\n\n          if (!gradient) {\n            gradient = LinearGradient.new(this._root, {});\n            var sourceStop = {\n              color: sourceFill\n            };\n\n            if (source.get(\"unknown\")) {\n              sourceStop.opacity = 0;\n            }\n\n            var targetStop = {\n              color: targetFill\n            };\n\n            if (target.get(\"unknown\")) {\n              targetStop.opacity = 0;\n            }\n\n            gradient.set(\"stops\", [sourceStop, targetStop]);\n            link._fillGradient = gradient;\n          }\n\n          link.set(\"fillGradient\", gradient);\n          break;\n\n        case \"none\":\n          link.set(\"fill\", undefined); // do not use remove!\n\n          break;\n      }\n\n      switch (strokeStyle) {\n        case \"solid\":\n          link._applyTemplates();\n\n          break;\n\n        case \"source\":\n          link.set(\"stroke\", sourceFill);\n          break;\n\n        case \"target\":\n          link.set(\"stroke\", targetFill);\n\n        case \"gradient\":\n          var gradient = link._strokeGradient;\n\n          if (!gradient) {\n            gradient = LinearGradient.new(this._root, {});\n            var sourceStop = {\n              color: sourceFill\n            };\n\n            if (source.get(\"unknown\")) {\n              sourceStop.opacity = 0;\n            }\n\n            var targetStop = {\n              color: targetFill\n            };\n\n            if (target.get(\"unknown\")) {\n              targetStop.opacity = 0;\n            }\n\n            gradient.set(\"stops\", [sourceStop, targetStop]);\n            link._strokeGradient = gradient;\n          }\n\n          link.set(\"strokeGradient\", gradient);\n          break;\n\n        case \"none\":\n          link.remove(\"stroke\");\n          break;\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Flow.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.disposeDataItem.call(this, dataItem);\n\n      var link = dataItem.get(\"link\");\n\n      if (link) {\n        this.links.removeValue(link);\n        link.dispose();\n      }\n    }\n  });\n  /**\r\n   * Shows diagram's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(Flow.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, hiddenState, stateAnimationDuration, stateAnimationEasing, easing, linkGraphics;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              hiddenState = this.states.create(\"hidden\", {});\n              stateAnimationDuration = \"stateAnimationDuration\";\n              stateAnimationEasing = \"stateAnimationEasing\";\n\n              if (!$type.isNumber(duration)) {\n                duration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n              }\n\n              easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n              promises.push(dataItem.animate({\n                key: \"valueWorking\",\n                to: 0,\n                duration: duration,\n                easing: easing\n              }).waitForStop());\n              linkGraphics = dataItem.get(\"link\");\n              linkGraphics.hide();\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Shows diagram's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(Flow.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, easing, linkGraphics;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n\n              if (!$type.isNumber(duration)) {\n                duration = this.get(\"stateAnimationDuration\", 0);\n              }\n\n              easing = this.get(\"stateAnimationEasing\");\n              promises.push(dataItem.animate({\n                key: \"valueWorking\",\n                to: dataItem.get(\"value\"),\n                duration: duration,\n                easing: easing\n              }).waitForStop());\n              linkGraphics = dataItem.get(\"link\");\n              linkGraphics.show();\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(Flow.prototype, \"_positionBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet) {\n      var sprite = bullet.get(\"sprite\");\n\n      if (sprite) {\n        var dataItem = sprite.dataItem;\n\n        if (dataItem) {\n          var link = dataItem.get(\"link\");\n          var sprite_1 = bullet.get(\"sprite\");\n\n          if (sprite_1) {\n            var point = link.getPoint(this._getBulletLocation(bullet));\n            sprite_1.setAll({\n              x: point.x,\n              y: point.y\n            });\n\n            if (bullet.get(\"autoRotate\")) {\n              sprite_1.set(\"rotation\", point.angle + bullet.get(\"autoRotateAngle\", 0));\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Flow.prototype, \"_getBulletLocation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet) {\n      return bullet.get(\"locationY\", 0);\n    }\n  });\n  Object.defineProperty(Flow, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Flow\"\n  });\n  Object.defineProperty(Flow, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Series.classNames.concat([Flow.className])\n  });\n  return Flow;\n}(Series);\n\nexport { Flow };","map":{"version":3,"sources":["../../../../../src/.internal/charts/flow/Flow.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { FlowLink } from \"./FlowLink\";\nimport type { FlowNodes, IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { ListTemplate } from \"../../core/util/List\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { FlowDefaultTheme } from \"./FlowDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IFlowDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Link value.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Associated link element.\n\t */\n\tlink: FlowLink;\n\n\t/**\n\t * Link's color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyLink: d3sankey.SankeyLink<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * An ID of the target node.\n\t */\n\ttargetId: string;\n\n\t/**\n\t * An ID of the source node.\n\t */\n\tsourceId: string;\n\n\t/**\n\t * A data item of the source node.\n\t */\n\tsource: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * A data item of the target node.\n\t */\n\ttarget: DataItem<IFlowNodesDataItem>;\n\n}\n\nexport interface IFlowSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data which holds source node ID.\n\t */\n\tsourceIdField?: string;\n\n\t/**\n\t * A field in data which holds target node ID.\n\t */\n\ttargetIdField?: string;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Minimum gap between adjacent nodes.\n\t *\n\t * @default 10\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Minimum size of the node/link.\n\t * \n\t * It's a relative value to the sum of all values in the series. If set,\n\t * this relative value will be used for small value nodes when calculating\n\t * their size. For example, if it's set to `0.01`, small nodes will be\n\t * sized like their value is 1% of the total sum of all values in series.\n\t *\n\t * @since 5.1.5\n\t */\n\tminSize?: number;\n\n}\n\nexport interface IFlowPrivate extends ISeriesPrivate {\n\tvalueSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n}\n\nexport interface IFlowEvents extends ISeriesEvents {\n}\n\n/**\n * A base class for all flow type series: [[Sankey]] and [[Chord]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more info\n */\nexport abstract class Flow extends Series {\n\tpublic static className: string = \"Flow\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Flow.className]);\n\n\tdeclare public _settings: IFlowSettings;\n\tdeclare public _privateSettings: IFlowPrivate;\n\tdeclare public _dataItemSettings: IFlowDataItem;\n\tdeclare public _events: IFlowEvents;\n\n\t/**\n\t * @ignore\n\t */\n\tdeclare public readonly nodes: FlowNodes;\n\n\t/**\n\t * Container series will place their links in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract readonly links: ListTemplate<FlowLink>;\n\n\tprotected _nodesData: d3sankey.SankeyNodeMinimal<{}, {}>[] = [];\n\tprotected _linksData: { source: d3sankey.SankeyNodeMinimal<{}, {}>, target: d3sankey.SankeyNodeMinimal<{}, {}>, value: number }[] = [];\n\tprotected _index = 0;\n\tprotected _nodesDataSet:boolean = false;\n\n\tprotected _linksByIndex: { [index: string]: any } = {};\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(FlowDefaultTheme.new(this._root));\n\n\t\tthis.fields.push(\"disabled\", \"sourceId\", \"targetId\");\n\n\t\tif (this.nodes) {\n\t\t\tthis.nodes.flow = this;\n\t\t}\n\n\t\tsuper._afterNew();\n\n\t\tthis.children.push(this.bulletsContainer);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowLink;\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst nodes = this.nodes;\n\t\tif (nodes) {\n\t\t\tlet unknown = false;\n\t\t\tlet sourceId = dataItem.get(\"sourceId\");\n\t\t\tlet sourceDataItem = nodes.getDataItemById(sourceId);\n\n\t\t\tif (!sourceDataItem) {\n\t\t\t\tif (sourceId == null) {\n\t\t\t\t\tsourceId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\t\t\t\tnodes.data.push({ id: sourceId, unknown: unknown });\n\t\t\t\tsourceDataItem = nodes.getDataItemById(sourceId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\tsourceDataItem.set(\"name\", sourceId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tunknown = false;\n\t\t\tlet targetId = dataItem.get(\"targetId\");\n\n\t\t\tlet targetDataItem = nodes.getDataItemById(targetId);\n\t\t\tif (!targetDataItem) {\n\t\t\t\tif (targetId == null) {\n\t\t\t\t\ttargetId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\n\t\t\t\tnodes.data.push({ id: targetId, unknown: unknown });\n\t\t\t\ttargetDataItem = nodes.getDataItemById(targetId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\ttargetDataItem.set(\"name\", targetId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (sourceDataItem) {\n\t\t\t\tdataItem.set(\"source\", sourceDataItem);\n\t\t\t\tnodes.addOutgoingLink(sourceDataItem, dataItem);\n\t\t\t}\n\n\t\t\tif (targetDataItem) {\n\t\t\t\tdataItem.set(\"target\", targetDataItem);\n\t\t\t\tnodes.addincomingLink(targetDataItem, dataItem);\n\t\t\t}\n\n\t\t\tdataItem.set(\"link\", this.makeLink(dataItem));\n\n\t\t\tconst sourceIndex = this.nodes.dataItems.indexOf(sourceDataItem);\n\t\t\tconst targetIndex = this.nodes.dataItems.indexOf(targetDataItem);\n\n\t\t\tthis._linksByIndex[sourceIndex + \"_\" + targetIndex] = dataItem;\n\n\t\t\tif (sourceDataItem.get(\"unknown\")) {\n\t\t\t\tif (targetDataItem) {\n\t\t\t\t\tsourceDataItem.set(\"fill\", targetDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\n\t\t\tif (targetDataItem.get(\"unknown\")) {\n\t\t\t\tif (sourceDataItem) {\n\t\t\t\t\ttargetDataItem.set(\"fill\", sourceDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\t\t\tthis._updateLinkColor(dataItem);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tif(!this.nodes._userDataSet){\n\t\t\tthis.nodes.data.setAll([]);\n\t\t\tthis.nodes._userDataSet = false;\n\t\t}\n\n\t}\t\t\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tlet valueLow = Infinity;\n\t\tlet valueHigh = -Infinity;\n\t\tlet valueSum = 0;\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._nodesData = [];\n\t\t\tconst nodes = this.nodes;\n\t\t\tif (nodes) {\n\t\t\t\t$array.each(nodes.dataItems, (dataItem) => {\n\t\t\t\t\tconst d3SankeyNode = dataItem.get(\"d3SankeyNode\");\n\t\t\t\t\tthis._nodesData.push(d3SankeyNode);\n\n\t\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\n\n\t\t\t\t\tlet sumIncoming = 0;\n\t\t\t\t\tlet sumIncomingWorking = 0;\n\t\t\t\t\tif (incoming) {\n\t\t\t\t\t\t$array.each(incoming, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumIncoming += value;\n\t\t\t\t\t\t\tsumIncomingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumIncoming\", sumIncoming);\n\t\t\t\t\tdataItem.set(\"sumIncomingWorking\", sumIncomingWorking);\n\n\t\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\n\t\t\t\t\tlet sumOutgoing = 0;\n\t\t\t\t\tlet sumOutgoingWorking = 0;\n\t\t\t\t\tif (outgoing) {\n\t\t\t\t\t\t$array.each(outgoing, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumOutgoing += value;\n\t\t\t\t\t\t\tsumOutgoingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumOutgoing\", sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumOutgoingWorking\", sumOutgoingWorking);\n\n\t\t\t\t\tdataItem.set(\"sum\", sumIncoming + sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumWorking\", sumIncomingWorking + sumOutgoingWorking);\n\n\t\t\t\t\tnodes.updateLegendValue(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._linksData = [];\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tif (value < valueLow) {\n\t\t\t\t\t\tvalueLow = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value > valueHigh) {\n\t\t\t\t\t\tvalueHigh = value;\n\t\t\t\t\t}\n\t\t\t\t\tvalueSum += value;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tlet valueWorking = dataItem.get(\"valueWorking\");\n\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\tif (minSize > 0) {\n\t\t\t\t\t\tif (valueWorking < minSize * valueSum) {\n\t\t\t\t\t\t\tvalueWorking = minSize * valueSum;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet d3SankeyLink = { source: dataItem.get(\"source\").get(\"d3SankeyNode\"), target: dataItem.get(\"target\").get(\"d3SankeyNode\"), value: valueWorking };\n\t\t\t\t\tdataItem.setRaw(\"d3SankeyLink\", d3SankeyLink);\n\t\t\t\t\tthis._linksData.push(d3SankeyLink);\n\t\t\t\t\tthis.updateLegendValue(dataItem);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"valueHigh\", valueHigh);\n\t\t\tthis.setPrivateRaw(\"valueLow\", valueLow);\n\t\t\tthis.setPrivateRaw(\"valueSum\", valueSum);\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst link = dataItem.get(\"link\");\n\n\t\tconst fillStyle = link.get(\"fillStyle\");\n\t\tconst strokeStyle = link.get(\"strokeStyle\");\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\t\tconst sourceFill = source.get(\"fill\");\n\t\tconst targetFill = target.get(\"fill\");\n\t\tlink.remove(\"fillGradient\");\n\t\tlink.remove(\"strokeGradient\");\n\n\t\tswitch (fillStyle) {\n\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"fill\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"fill\", targetFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._fillGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\t\tlink._fillGradient = gradient;\n\t\t\t\t}\n\t\t\t\tlink.set(\"fillGradient\", gradient);\n\t\t\t\tbreak;\n\t\t\tcase \"none\":\n\t\t\t\tlink.set(\"fill\", undefined); // do not use remove!\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (strokeStyle) {\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"stroke\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"stroke\", targetFill);\n\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._strokeGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\t\tlink._strokeGradient = gradient;\n\t\t\t\t}\n\t\t\t\tlink.set(\"strokeGradient\", gradient);\n\t\t\t\tbreak;\n\n\t\t\tcase \"none\":\n\t\t\t\tlink.remove(\"stroke\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet link = dataItem.get(\"link\");\n\t\tif (link) {\n\t\t\tthis.links.removeValue(link);\n\t\t\tlink.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tconst stateAnimationDuration = \"stateAnimationDuration\";\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.hide();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.show();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst point = link.getPoint(this._getBulletLocation(bullet));\n\t\t\t\t\tsprite.setAll({ x: point.x, y: point.y });\n\n\t\t\t\t\tif (bullet.get(\"autoRotate\")) {\n\t\t\t\t\t\tsprite.set(\"rotation\", point.angle + bullet.get(\"autoRotateAngle\", 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\treturn bullet.get(\"locationY\", 0);\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}