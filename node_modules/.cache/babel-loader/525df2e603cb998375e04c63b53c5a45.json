{"ast":null,"code":"var _jsxFileName = \"/Users/medina/development/sankey/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useMemo, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport * as highchartsSankey from \"highcharts/modules/sankey\"; //npm install highcharts highcharts-react-official highcharts-sankey\n\nimport { client, useConfig, useElementData } from \"@sigmacomputing/plugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nhighchartsSankey(Highcharts);\nclient.config.configureEditorPanel([{\n  name: \"source\",\n  type: \"element\"\n}, {\n  name: \"dimension\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: true\n}, {\n  name: \"measures\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: true\n}]);\n\nfunction App() {\n  _s();\n\n  const config = useConfig();\n  const sigmaData = useElementData(config.source);\n  const ref = useRef(); // const options = useMemo(() => {\n  //   const dimensions = config.dimension;\n  //   const measures = config.measures;\n  //   // transform sigmaData --> sankey data\n  //   let dataMap = [];\n  //   if (dimensions && sigmaData?.[dimensions[0]]) {\n  //     for (let i = 0; i < dimensions.length - 1; i++) {\n  //       for (let j = 0; j < sigmaData[dimensions[i]].length; j++) {\n  //         const from = sigmaData[dimensions[i]][j];\n  //         const to = sigmaData[dimensions[i + 1]][j];\n  //         const weight = sigmaData[measures[i]][j];\n  //         const dataPoint = [from, to, weight];\n  //         dataMap[dataPoint] = dataPoint;\n  //       }\n  //     }\n  //     // let data = [];\n  //     // let i = 0;\n  //     // for (var key in dataMap) {\n  //     //   data[i] = dataMap[key];\n  //     //   i++;\n  //     // }\n  //     // const data = [[\"Demo, No Trial\",\"Closed Lost\",\"25\"],\n  //     // [\"No Demo, No Trial\",\"Won Software\",\"1\"],\n  //     // [\"First Task Run\",\"Onboarding Completed\",\"19\"],\n  //     // [\"Activated\",\"First Task Run\",\"34\"],\n  //     // [\"No Demo, No Trial\",\"Qualified Out\",\"5\"],\n  //     // [\"Demo\",\"Demo, Trial\",\"4\"],\n  //     // [\"No Demo\",\"No Demo, No Trial\",\"78\"],\n  //     // [\"No Demo, No Trial\",\"Won Astro\",\"23\"],\n  //     // [\"Demo\",\"Demo, No Trial\",\"56\"],\n  //     // [\"No Demo\",\"No Demo, Trial\",\"8\"],\n  //     // [\"Opp Created\",\"No Demo\",\"86\"],\n  //     // [\"Demo, No Trial\",\"Won Astro\",\"20\"],\n  //     // [\"No Demo, No Trial\",\"Closed Lost\",\"49\"],\n  //     // [\"Contract Started\",\"Activated\",\"42\"],\n  //     // [\"Onboarding Completed\",\">50% Reserved Capacity\",\"8\"],\n  //     // [\"Won Astro\",\"Contract Started\",\"50\"],\n  //     // [\"No Demo, Trial\",\"Closed Lost\",\"2\"],\n  //     // [\"Opp Created\",\"Demo\",\"60\"],\n  //     // [\">50% Reserved Capacity\",\">100k Tasks\",\"5\"],\n  //     // [\"Demo, No Trial\",\"Qualified Out\",\"11\"],\n  //     // [\"Demo, Trial\",\"Won Astro\",\"4\"],\n  //     // [\">50% Reserved Capacity\",\"Expansion\",\"1\"],\n  //     // [\"No Demo, Trial\",\"Won Astro\",\"6\"]];\n  //     const data= [\n  //              ['Oil', 'Transportation', 94],\n  //              ['Natural Gas', 'Transportation', 3],\n  //              ['Coal', 'Transportation', 0],\n  //              ['Renewable', 'Transportation', 0],\n  //              ['Nuclear', 'Transportation', 3],\n  //              ['Oil', 'Industrial', 41],\n  //              ['Natural Gas', 'Industrial', 40],\n  //              ['Coal', 'Industrial', 7],\n  //              ['Renewable', 'Industrial', 11],\n  //              ['Nuclear', 'Industrial', 0],\n  //              ['Oil', 'Residential & Commercial', 17],\n  //              ['Natural Gas', 'Residential & Commercial', 76],\n  //              ['Coal', 'Residential & Commercial', 1],\n  //              ['Renewable', 'Residential & Commercial', 7],\n  //              ['Nuclear', 'Residential & Commercial', 0],\n  //              ['Oil', 'Electric Power', 1],\n  //              ['Natural Gas', 'Electric Power', 18],\n  //              ['Coal', 'Electric Power', 48],\n  //              ['Renewable', 'Electric Power', 11],\n  //              ['Nuclear', 'Electric Power', 22]\n  //     ];\n  //     const options = {\n  //       title: {\n  //         text: undefined,\n  //       },\n  //       chart: {\n  //         height: window.innerHeight,\n  //         backgroundColor: \"transparent\",\n  //       },\n  //       accessibility: {\n  //         point: {\n  //           valueDescriptionFormat:\n  //             \"{index}. {point.from} to {point.to}, {point.weight}.\",\n  //         },\n  //       },\n  //       series: [\n  //         {\n  //           keys: [\"from\", \"to\", \"weight\"],\n  //           data: data,\n  //           type: \"sankey\",\n  //           name: \"Sankey demo series\",\n  //         },\n  //       ],\n  //     };\n  //     return options;\n  //   }\n  // }, [config, sigmaData]);\n\n  const data = [['Oil', 'Transportation', 94], ['Natural Gas', 'Transportation', 3], ['Coal', 'Transportation', 0], ['Renewable', 'Transportation', 0], ['Nuclear', 'Transportation', 3], ['Oil', 'Industrial', 41], ['Natural Gas', 'Industrial', 40], ['Coal', 'Industrial', 7], ['Renewable', 'Industrial', 11], ['Nuclear', 'Industrial', 0], ['Oil', 'Residential & Commercial', 17], ['Natural Gas', 'Residential & Commercial', 76], ['Coal', 'Residential & Commercial', 1], ['Renewable', 'Residential & Commercial', 7], ['Nuclear', 'Residential & Commercial', 0], ['Oil', 'Electric Power', 1], ['Natural Gas', 'Electric Power', 18], ['Coal', 'Electric Power', 48], ['Renewable', 'Electric Power', 11], ['Nuclear', 'Electric Power', 22]];\n  const options = {\n    title: {\n      text: undefined\n    },\n    chart: {\n      height: window.innerHeight,\n      backgroundColor: \"transparent\"\n    },\n    accessibility: {\n      point: {\n        valueDescriptionFormat: \"{index}. {point.from} to {point.to}, {point.weight}.\"\n      }\n    },\n    series: [{\n      keys: [\"from\", \"to\", \"weight\"],\n      data: data,\n      type: \"sankey\",\n      name: \"Sankey demo series\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QopplIAJcjFSLG77pxSxcctPaTw=\", false, function () {\n  return [useConfig, useElementData];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/medina/development/sankey/src/App.js"],"names":["useMemo","useRef","Highcharts","HighchartsReact","highchartsSankey","client","useConfig","useElementData","config","configureEditorPanel","name","type","source","allowMultiple","App","sigmaData","ref","data","options","title","text","undefined","chart","height","window","innerHeight","backgroundColor","accessibility","point","valueDescriptionFormat","series","keys"],"mappings":"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","sourcesContent":["import \"./App.css\";\n\nimport { useMemo, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport * as highchartsSankey from \"highcharts/modules/sankey\";\n//npm install highcharts highcharts-react-official highcharts-sankey\n\nimport {\n  client,\n  useConfig,\n  useElementData,\n} from \"@sigmacomputing/plugin\";\n\nhighchartsSankey(Highcharts);\n\nclient.config.configureEditorPanel([\n  { name: \"source\", type: \"element\" },\n  { name: \"dimension\", type: \"column\", source: \"source\", allowMultiple: true },\n  { name: \"measures\", type: \"column\", source: \"source\", allowMultiple: true },\n]);\n\nfunction App() {\n  const config = useConfig();\n  const sigmaData = useElementData(config.source);\n  const ref = useRef();\n  // const options = useMemo(() => {\n  //   const dimensions = config.dimension;\n  //   const measures = config.measures;\n\n  //   // transform sigmaData --> sankey data\n  //   let dataMap = [];\n  //   if (dimensions && sigmaData?.[dimensions[0]]) {\n  //     for (let i = 0; i < dimensions.length - 1; i++) {\n  //       for (let j = 0; j < sigmaData[dimensions[i]].length; j++) {\n  //         const from = sigmaData[dimensions[i]][j];\n  //         const to = sigmaData[dimensions[i + 1]][j];\n  //         const weight = sigmaData[measures[i]][j];\n  //         const dataPoint = [from, to, weight];\n  //         dataMap[dataPoint] = dataPoint;\n  //       }\n  //     }\n  //     // let data = [];\n  //     // let i = 0;\n  //     // for (var key in dataMap) {\n  //     //   data[i] = dataMap[key];\n  //     //   i++;\n  //     // }\n\n  //     // const data = [[\"Demo, No Trial\",\"Closed Lost\",\"25\"],\n  //     // [\"No Demo, No Trial\",\"Won Software\",\"1\"],\n  //     // [\"First Task Run\",\"Onboarding Completed\",\"19\"],\n  //     // [\"Activated\",\"First Task Run\",\"34\"],\n  //     // [\"No Demo, No Trial\",\"Qualified Out\",\"5\"],\n  //     // [\"Demo\",\"Demo, Trial\",\"4\"],\n  //     // [\"No Demo\",\"No Demo, No Trial\",\"78\"],\n  //     // [\"No Demo, No Trial\",\"Won Astro\",\"23\"],\n  //     // [\"Demo\",\"Demo, No Trial\",\"56\"],\n  //     // [\"No Demo\",\"No Demo, Trial\",\"8\"],\n  //     // [\"Opp Created\",\"No Demo\",\"86\"],\n  //     // [\"Demo, No Trial\",\"Won Astro\",\"20\"],\n  //     // [\"No Demo, No Trial\",\"Closed Lost\",\"49\"],\n  //     // [\"Contract Started\",\"Activated\",\"42\"],\n  //     // [\"Onboarding Completed\",\">50% Reserved Capacity\",\"8\"],\n  //     // [\"Won Astro\",\"Contract Started\",\"50\"],\n  //     // [\"No Demo, Trial\",\"Closed Lost\",\"2\"],\n  //     // [\"Opp Created\",\"Demo\",\"60\"],\n  //     // [\">50% Reserved Capacity\",\">100k Tasks\",\"5\"],\n  //     // [\"Demo, No Trial\",\"Qualified Out\",\"11\"],\n  //     // [\"Demo, Trial\",\"Won Astro\",\"4\"],\n  //     // [\">50% Reserved Capacity\",\"Expansion\",\"1\"],\n  //     // [\"No Demo, Trial\",\"Won Astro\",\"6\"]];\n  //     const data= [\n  //              ['Oil', 'Transportation', 94],\n  //              ['Natural Gas', 'Transportation', 3],\n  //              ['Coal', 'Transportation', 0],\n  //              ['Renewable', 'Transportation', 0],\n  //              ['Nuclear', 'Transportation', 3],\n  //              ['Oil', 'Industrial', 41],\n  //              ['Natural Gas', 'Industrial', 40],\n  //              ['Coal', 'Industrial', 7],\n  //              ['Renewable', 'Industrial', 11],\n  //              ['Nuclear', 'Industrial', 0],\n  //              ['Oil', 'Residential & Commercial', 17],\n  //              ['Natural Gas', 'Residential & Commercial', 76],\n  //              ['Coal', 'Residential & Commercial', 1],\n  //              ['Renewable', 'Residential & Commercial', 7],\n  //              ['Nuclear', 'Residential & Commercial', 0],\n  //              ['Oil', 'Electric Power', 1],\n  //              ['Natural Gas', 'Electric Power', 18],\n  //              ['Coal', 'Electric Power', 48],\n  //              ['Renewable', 'Electric Power', 11],\n  //              ['Nuclear', 'Electric Power', 22]\n  //     ];\n  //     const options = {\n  //       title: {\n  //         text: undefined,\n  //       },\n  //       chart: {\n  //         height: window.innerHeight,\n  //         backgroundColor: \"transparent\",\n  //       },\n  //       accessibility: {\n  //         point: {\n  //           valueDescriptionFormat:\n  //             \"{index}. {point.from} to {point.to}, {point.weight}.\",\n  //         },\n  //       },\n  //       series: [\n  //         {\n  //           keys: [\"from\", \"to\", \"weight\"],\n  //           data: data,\n  //           type: \"sankey\",\n  //           name: \"Sankey demo series\",\n  //         },\n  //       ],\n  //     };\n  //     return options;\n  //   }\n  // }, [config, sigmaData]);\n\n\nconst data= [\n    ['Oil', 'Transportation', 94],\n    ['Natural Gas', 'Transportation', 3],\n    ['Coal', 'Transportation', 0],\n    ['Renewable', 'Transportation', 0],\n    ['Nuclear', 'Transportation', 3],\n    ['Oil', 'Industrial', 41],\n    ['Natural Gas', 'Industrial', 40],\n    ['Coal', 'Industrial', 7],\n    ['Renewable', 'Industrial', 11],\n    ['Nuclear', 'Industrial', 0],\n    ['Oil', 'Residential & Commercial', 17],\n    ['Natural Gas', 'Residential & Commercial', 76],\n    ['Coal', 'Residential & Commercial', 1],\n    ['Renewable', 'Residential & Commercial', 7],\n    ['Nuclear', 'Residential & Commercial', 0],\n    ['Oil', 'Electric Power', 1],\n    ['Natural Gas', 'Electric Power', 18],\n    ['Coal', 'Electric Power', 48],\n    ['Renewable', 'Electric Power', 11],\n    ['Nuclear', 'Electric Power', 22]\n];\nconst options = {\ntitle: {\ntext: undefined,\n},\nchart: {\nheight: window.innerHeight,\nbackgroundColor: \"transparent\",\n},\naccessibility: {\npoint: {\n valueDescriptionFormat:\n   \"{index}. {point.from} to {point.to}, {point.weight}.\",\n},\n},\nseries: [\n{\n keys: [\"from\", \"to\", \"weight\"],\n data: data,\n type: \"sankey\",\n name: \"Sankey demo series\",\n},\n],\n};\n\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={options} ref={ref} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}