{"ast":null,"code":"var _jsxFileName = \"/Users/medina/development/sankey/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useMemo, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport * as highchartsSankey from \"highcharts/modules/sankey\"; //npm install highcharts highcharts-react-official highcharts-sankey\n\nimport { client, useConfig, useElementData } from \"@sigmacomputing/plugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nhighchartsSankey(Highcharts);\nclient.config.configureEditorPanel([{\n  name: \"source\",\n  type: \"element\"\n}, {\n  name: \"dimension\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: true\n}, {\n  name: \"measures\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: true\n}]);\n\nfunction App() {\n  _s();\n\n  const config = useConfig();\n  const sigmaData = useElementData(config.source);\n  const ref = useRef();\n  const options = useMemo(() => {\n    const dimensions = config.dimension;\n    const measures = config.measures; // transform sigmaData --> sankey data\n\n    let dataMap = [];\n\n    if (dimensions && (sigmaData === null || sigmaData === void 0 ? void 0 : sigmaData[dimensions[0]])) {\n      for (let i = 0; i < dimensions.length - 1; i++) {\n        for (let j = 0; j < sigmaData[dimensions[i]].length; j++) {\n          const from = sigmaData[dimensions[i]][j];\n          const to = sigmaData[dimensions[i + 1]][j];\n          const weight = sigmaData[measures[i]][j];\n          const dataPoint = [from, to, weight];\n          dataMap[dataPoint] = dataPoint;\n        }\n      }\n\n      let data = [];\n      let i = 0;\n\n      for (var key in dataMap) {\n        data[i] = dataMap[key];\n        i++;\n      }\n\n      const options = {\n        title: {\n          text: undefined\n        },\n        chart: {\n          height: window.innerHeight,\n          backgroundColor: \"transparent\"\n        },\n        accessibility: {\n          point: {\n            valueDescriptionFormat: \"{index}. {point.from} to {point.to}, {point.weight}.\"\n          }\n        },\n        series: [{\n          keys: [\"from\", \"to\", \"weight\"],\n          data: data,\n          type: \"sankey\",\n          name: \"Sankey demo series\"\n        }]\n      };\n      return options;\n    }\n  }, [config, sigmaData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"M3PMrxS3QZkKj02N9zl80Pb62sI=\", false, function () {\n  return [useConfig, useElementData];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/medina/development/sankey/src/App.js"],"names":["useMemo","useRef","Highcharts","HighchartsReact","highchartsSankey","client","useConfig","useElementData","config","configureEditorPanel","name","type","source","allowMultiple","App","sigmaData","ref","options","dimensions","dimension","measures","dataMap","i","length","j","from","to","weight","dataPoint","data","key","title","text","undefined","chart","height","window","innerHeight","backgroundColor","accessibility","point","valueDescriptionFormat","series","keys"],"mappings":"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","sourcesContent":["import \"./App.css\";\n\nimport { useMemo, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport * as highchartsSankey from \"highcharts/modules/sankey\";\n//npm install highcharts highcharts-react-official highcharts-sankey\n\nimport {\n  client,\n  useConfig,\n  useElementData,\n} from \"@sigmacomputing/plugin\";\n\nhighchartsSankey(Highcharts);\n\nclient.config.configureEditorPanel([\n  { name: \"source\", type: \"element\" },\n  { name: \"dimension\", type: \"column\", source: \"source\", allowMultiple: true },\n  { name: \"measures\", type: \"column\", source: \"source\", allowMultiple: true },\n]);\n\nfunction App() {\n  const config = useConfig();\n  const sigmaData = useElementData(config.source);\n  const ref = useRef();\n  const options = useMemo(() => {\n    const dimensions = config.dimension;\n    const measures = config.measures;\n\n    // transform sigmaData --> sankey data\n    let dataMap = [];\n    if (dimensions && sigmaData?.[dimensions[0]]) {\n      for (let i = 0; i < dimensions.length - 1; i++) {\n        for (let j = 0; j < sigmaData[dimensions[i]].length; j++) {\n          const from = sigmaData[dimensions[i]][j];\n          const to = sigmaData[dimensions[i + 1]][j];\n          const weight = sigmaData[measures[i]][j];\n          const dataPoint = [from, to, weight];\n          dataMap[dataPoint] = dataPoint;\n        }\n      }\n      let data = [];\n      let i = 0;\n      for (var key in dataMap) {\n        data[i] = dataMap[key];\n        i++;\n      }\n      const options = {\n        title: {\n          text: undefined,\n        },\n        chart: {\n          height: window.innerHeight,\n          backgroundColor: \"transparent\",\n        },\n        accessibility: {\n          point: {\n            valueDescriptionFormat:\n              \"{index}. {point.from} to {point.to}, {point.weight}.\",\n          },\n        },\n        series: [\n          {\n            keys: [\"from\", \"to\", \"weight\"],\n            data: data,\n            type: \"sankey\",\n            name: \"Sankey demo series\",\n          },\n        ],\n      };\n      return options;\n    }\n  }, [config, sigmaData]);\n\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={options} ref={ref} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}