{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNodes } from \"./FlowNodes\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n/**\r\n * Holds instances of nodes for a [[Sankey]] series.\r\n */\n\nvar SankeyNodes =\n/** @class */\nfunction (_super) {\n  __extends(SankeyNodes, _super);\n\n  function SankeyNodes() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * List of rectangle elements.\r\n     *\r\n     * @default new ListTemplate<RoundedRectangle>\r\n     */\n\n\n    Object.defineProperty(_this, \"rectangles\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          themeTags: [\"shape\"]\n        }, [_this.rectangles.template]);\n      })\n    });\n    /**\r\n     * Related [[Sankey]] series.\r\n     */\n\n    Object.defineProperty(_this, \"flow\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Object.defineProperty(SankeyNodes.prototype, \"makeNode\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var flow = this.flow;\n\n      var node = _super.prototype.makeNode.call(this, dataItem, \"sankey\");\n\n      var rectangle = node.children.insertIndex(0, this.rectangles.make());\n      this.rectangles.push(rectangle);\n\n      rectangle._setSoft(\"fill\", dataItem.get(\"fill\"));\n\n      dataItem.set(\"rectangle\", rectangle);\n      node.events.on(\"dragged\", function () {\n        var d3SankeyNode = node.dataItem.get(\"d3SankeyNode\");\n\n        if (d3SankeyNode) {\n          if (flow) {\n            if (flow.get(\"orientation\") == \"horizontal\") {\n              d3SankeyNode.x0 = node.x();\n              d3SankeyNode.y0 = node.y();\n            } else {\n              d3SankeyNode.x0 = node.y();\n              d3SankeyNode.y0 = node.x();\n            }\n\n            flow.updateSankey();\n          }\n        }\n      });\n      var label = this.labels.make();\n      this.labels.push(label);\n\n      if (flow) {\n        label.addTag(flow.get(\"orientation\", \"\"));\n      }\n\n      node.children.push(label);\n      dataItem.set(\"label\", label);\n\n      label._setDataItem(dataItem);\n\n      rectangle._setDataItem(dataItem);\n\n      return node;\n    }\n  });\n  Object.defineProperty(SankeyNodes.prototype, \"_positionBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet) {\n      var sprite = bullet.get(\"sprite\");\n\n      if (sprite) {\n        var dataItem = sprite.dataItem;\n\n        if (dataItem) {\n          var sprite_1 = bullet.get(\"sprite\");\n\n          if (sprite_1) {\n            var rectangle = dataItem.get(\"rectangle\");\n            var node = dataItem.get(\"node\");\n            var locationX = bullet.get(\"locationX\", 0.5);\n            var locationY = bullet.get(\"locationY\", 0.5);\n\n            if (rectangle) {\n              sprite_1.setAll({\n                x: node.x() + rectangle.width() * locationX,\n                y: node.y() + rectangle.height() * locationY\n              });\n            }\n          }\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(SankeyNodes.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.disposeDataItem.call(this, dataItem);\n\n      var rectangle = dataItem.get(\"rectangle\");\n\n      if (rectangle) {\n        this.rectangles.removeValue(rectangle);\n        rectangle.dispose();\n      }\n    }\n  });\n  Object.defineProperty(SankeyNodes, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"SankeyNodes\"\n  });\n  Object.defineProperty(SankeyNodes, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: FlowNodes.classNames.concat([SankeyNodes.className])\n  });\n  return SankeyNodes;\n}(FlowNodes);\n\nexport { SankeyNodes };","map":{"version":3,"sources":["../../../../../src/.internal/charts/flow/SankeyNodes.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Sankey } from \"./Sankey\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nexport interface ISankeyNodesDataItem extends IFlowNodesDataItem {\n\trectangle: RoundedRectangle;\n}\n\nexport interface ISankeyNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface ISankeyNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface ISankeyNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Sankey]] series.\n */\nexport class SankeyNodes extends FlowNodes {\n\tpublic static className: string = \"SankeyNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([SankeyNodes.className]);\n\n\tdeclare public _settings: ISankeyNodesSettings;\n\tdeclare public _privateSettings: ISankeyNodesPrivate;\n\tdeclare public _dataItemSettings: ISankeyNodesDataItem;\n\tdeclare public _events: ISankeyNodesEvents;\n\n\t/**\n\t * List of rectangle elements.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, { themeTags: [\"shape\"] }, [this.rectangles.template])\n\t);\n\n\t/**\n\t * Related [[Sankey]] series.\n\t */\n\tpublic flow: Sankey | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst flow = this.flow;\n\n\t\tconst node = super.makeNode(dataItem, \"sankey\");\n\n\t\tconst rectangle = node.children.insertIndex(0, this.rectangles.make());\n\t\tthis.rectangles.push(rectangle);\n\t\trectangle._setSoft(\"fill\", dataItem.get(\"fill\"));\n\t\tdataItem.set(\"rectangle\", rectangle);\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\tconst d3SankeyNode = (node.dataItem as DataItem<ISankeyNodesDataItem>).get(\"d3SankeyNode\");\n\t\t\tif (d3SankeyNode) {\n\t\t\t\tif (flow) {\n\t\t\t\t\tif (flow.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t\t\td3SankeyNode.x0 = node.x();\n\t\t\t\t\t\td3SankeyNode.y0 = node.y();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td3SankeyNode.x0 = node.y();\n\t\t\t\t\t\td3SankeyNode.y0 = node.x();\n\t\t\t\t\t}\n\n\t\t\t\t\tflow.updateSankey();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\n\t\tif (flow) {\n\t\t\tlabel.addTag(flow.get(\"orientation\", \"\"));\n\t\t}\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tlabel._setDataItem(dataItem);\n\t\trectangle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\tconst node = dataItem.get(\"node\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (rectangle) {\n\t\t\t\t\t\tsprite.setAll({ x: node.x() + rectangle.width() * locationX, y: node.y() + rectangle.height() * locationY });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet rectangle = dataItem.get(\"rectangle\");\n\t\tif (rectangle) {\n\t\t\tthis.rectangles.removeValue(rectangle);\n\t\t\trectangle.dispose();\n\t\t}\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}