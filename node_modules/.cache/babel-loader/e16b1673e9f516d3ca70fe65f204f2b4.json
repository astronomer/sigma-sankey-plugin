{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialize = void 0;\n\nfunction initialize() {\n  const pluginConfig = {\n    config: {}\n  };\n  const listeners = {};\n\n  for (const [key, value] of new URL(document.location.toString()).searchParams.entries()) pluginConfig[key] = JSON.parse(value);\n\n  const listener = e => {\n    emit(e.data.type, e.data.result, e.data.error);\n  };\n\n  window.addEventListener('message', listener, false);\n  on('wb:plugin:config:update', config => {\n    var _a;\n\n    Object.assign(pluginConfig, config);\n    emit('config', (_a = pluginConfig.config) !== null && _a !== void 0 ? _a : {});\n  }); // send initialize event\n\n  void execPromise('wb:plugin:init').then(config => {\n    Object.assign(pluginConfig, config);\n    emit('init', pluginConfig);\n    emit('config', pluginConfig.config);\n  });\n\n  function on(event, listener) {\n    listeners[event] = listeners[event] || [];\n    listeners[event].push(listener);\n  }\n\n  function off(event, listener) {\n    if (listeners[event] == null) return;\n    listeners[event] = listeners[event].filter(a => a !== listener);\n  }\n\n  function emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    Object.values(listeners[event] || []).forEach(fn => fn(...args));\n  }\n\n  function execPromise(event) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return new Promise((resolve, reject) => {\n      var _a;\n\n      const callback = (data, error) => {\n        if (error) reject(error);else resolve(data);\n        off(event, callback);\n      };\n\n      on(event, callback);\n      window.parent.postMessage({\n        type: event,\n        args,\n        elementId: pluginConfig.id\n      }, (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.wbOrigin) !== null && _a !== void 0 ? _a : '*');\n    });\n  }\n\n  return {\n    get sigmaEnv() {\n      return pluginConfig.sigmaEnv;\n    },\n\n    config: {\n      getKey(key) {\n        var _a;\n\n        return (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.config) === null || _a === void 0 ? void 0 : _a[key];\n      },\n\n      get() {\n        return pluginConfig.config;\n      },\n\n      set(partialConfig) {\n        void execPromise('wb:plugin:config:update', partialConfig);\n      },\n\n      setKey(key, value) {\n        void execPromise('wb:plugin:config:update', {\n          [key]: value\n        });\n      },\n\n      subscribe(listener) {\n        on('config', listener);\n        return () => off('config', listener);\n      },\n\n      configureEditorPanel(options) {\n        void execPromise('wb:plugin:config:inspector', options);\n      }\n\n    },\n    elements: {\n      getElementColumns(id) {\n        return execPromise('wb:plugin:element:columns:get', id);\n      },\n\n      subscribeToElementColumns(id, callback) {\n        const eventName = `wb:plugin:element:${id}:columns`;\n        on(eventName, callback);\n        void execPromise('wb:plugin:element:subscribe:columns', id);\n        return () => {\n          off(eventName, callback);\n          void execPromise('wb:plugin:element:unsubscribe:columns', id);\n        };\n      },\n\n      subscribeToElementData(id, callback) {\n        const eventName = `wb:plugin:element:${id}:data`;\n        on(eventName, callback);\n        void execPromise('wb:plugin:element:subscribe:data', id);\n        return () => {\n          off(eventName, callback);\n          void execPromise('wb:plugin:element:unsubscribe:data', id);\n        };\n      }\n\n    },\n    destroy: function () {\n      Object.keys(listeners).forEach(event => delete listeners[event]);\n      window.removeEventListener('message', listener, false);\n    }\n  };\n}\n\nexports.initialize = initialize;","map":{"version":3,"sources":["/Users/medina/development/sigma-sankey-plugin/node_modules/@sigmacomputing/plugin/dist/initialize.js"],"names":["Object","defineProperty","exports","value","initialize","pluginConfig","config","listeners","key","URL","document","location","toString","searchParams","entries","JSON","parse","listener","e","emit","data","type","result","error","window","addEventListener","on","_a","assign","execPromise","then","event","push","off","filter","a","args","values","forEach","fn","Promise","resolve","reject","callback","parent","postMessage","elementId","id","wbOrigin","sigmaEnv","getKey","get","set","partialConfig","setKey","subscribe","configureEditorPanel","options","elements","getElementColumns","subscribeToElementColumns","eventName","subscribeToElementData","destroy","keys","removeEventListener"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initialize = void 0;\nfunction initialize() {\n    const pluginConfig = {\n        config: {},\n    };\n    const listeners = {};\n    for (const [key, value] of new URL(document.location.toString()).searchParams.entries())\n        pluginConfig[key] = JSON.parse(value);\n    const listener = (e) => {\n        emit(e.data.type, e.data.result, e.data.error);\n    };\n    window.addEventListener('message', listener, false);\n    on('wb:plugin:config:update', (config) => {\n        var _a;\n        Object.assign(pluginConfig, config);\n        emit('config', (_a = pluginConfig.config) !== null && _a !== void 0 ? _a : {});\n    });\n    // send initialize event\n    void execPromise('wb:plugin:init').then(config => {\n        Object.assign(pluginConfig, config);\n        emit('init', pluginConfig);\n        emit('config', pluginConfig.config);\n    });\n    function on(event, listener) {\n        listeners[event] = listeners[event] || [];\n        listeners[event].push(listener);\n    }\n    function off(event, listener) {\n        if (listeners[event] == null)\n            return;\n        listeners[event] = listeners[event].filter(a => a !== listener);\n    }\n    function emit(event, ...args) {\n        Object.values(listeners[event] || []).forEach(fn => fn(...args));\n    }\n    function execPromise(event, ...args) {\n        return new Promise((resolve, reject) => {\n            var _a;\n            const callback = (data, error) => {\n                if (error)\n                    reject(error);\n                else\n                    resolve(data);\n                off(event, callback);\n            };\n            on(event, callback);\n            window.parent.postMessage({ type: event, args, elementId: pluginConfig.id }, (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.wbOrigin) !== null && _a !== void 0 ? _a : '*');\n        });\n    }\n    return {\n        get sigmaEnv() {\n            return pluginConfig.sigmaEnv;\n        },\n        config: {\n            getKey(key) {\n                var _a;\n                return (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.config) === null || _a === void 0 ? void 0 : _a[key];\n            },\n            get() {\n                return pluginConfig.config;\n            },\n            set(partialConfig) {\n                void execPromise('wb:plugin:config:update', partialConfig);\n            },\n            setKey(key, value) {\n                void execPromise('wb:plugin:config:update', {\n                    [key]: value,\n                });\n            },\n            subscribe(listener) {\n                on('config', listener);\n                return () => off('config', listener);\n            },\n            configureEditorPanel(options) {\n                void execPromise('wb:plugin:config:inspector', options);\n            },\n        },\n        elements: {\n            getElementColumns(id) {\n                return execPromise('wb:plugin:element:columns:get', id);\n            },\n            subscribeToElementColumns(id, callback) {\n                const eventName = `wb:plugin:element:${id}:columns`;\n                on(eventName, callback);\n                void execPromise('wb:plugin:element:subscribe:columns', id);\n                return () => {\n                    off(eventName, callback);\n                    void execPromise('wb:plugin:element:unsubscribe:columns', id);\n                };\n            },\n            subscribeToElementData(id, callback) {\n                const eventName = `wb:plugin:element:${id}:data`;\n                on(eventName, callback);\n                void execPromise('wb:plugin:element:subscribe:data', id);\n                return () => {\n                    off(eventName, callback);\n                    void execPromise('wb:plugin:element:unsubscribe:data', id);\n                };\n            },\n        },\n        destroy: function () {\n            Object.keys(listeners).forEach(event => delete listeners[event]);\n            window.removeEventListener('message', listener, false);\n        },\n    };\n}\nexports.initialize = initialize;\n"]},"metadata":{},"sourceType":"script"}